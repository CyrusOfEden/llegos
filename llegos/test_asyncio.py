# Generated by CodiumAI
import pytest

from llegos.asyncio import async_propogate, async_propogate_all
from llegos.test_mocks import Inform, MockAsyncAgent


class TestAsyncAgent:
    # Tests that the AsyncAgent can handle multiple messages at once
    @pytest.mark.asyncio
    async def test_handle_messages(self):
        agent = MockAsyncAgent()
        m1 = Inform(body="Message 1", receiver=agent)
        m2 = Inform(body="Message 2", receiver=agent)

        messages = [m1, m2]
        replies = []
        async for reply in async_propogate_all(messages):
            replies.append(reply)

        assert len(messages) == len(replies)

        for message, reply in zip(messages, replies):
            assert reply.body == f"Ack: {message.id}"

    # Tests that the agent can emit events
    @pytest.mark.asyncio
    async def test_agent_can_emit_events(self):
        agent = MockAsyncAgent()
        event_emitted = False

        def event_handler(message):
            nonlocal event_emitted
            event_emitted = True

        agent.on("inform", event_handler)
        message = Inform(receiver=agent, body="Hello!")

        async for reply in async_propogate(message):
            ...

        assert event_emitted
