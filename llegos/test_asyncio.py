# Generated by CodiumAI
import pytest

from llegos.asyncio import async_drain, async_propogate, async_propogate_all
from llegos.test_helpers import Ack, MockAsyncAgent


class TestAsyncAgent:
    # Tests that the AsyncAgent can handle multiple messages at once
    @pytest.mark.asyncio
    async def test_handle_messages(self):
        agent = MockAsyncAgent()
        m1 = Ack(receiver=agent)
        m2 = Ack(receiver=agent)

        messages = [m1, m2]
        replies: list[Ack] = []
        async for reply in async_propogate_all(messages):
            replies.append(reply)

        assert len(messages) == len(replies)

        for message, reply in zip(messages, replies):
            assert reply.parent == message

    # Tests that the agent can emit events
    @pytest.mark.asyncio
    async def test_agent_can_emit_events(self):
        agent = MockAsyncAgent()
        emitted_message = None

        def event_handler(message):
            nonlocal emitted_message
            emitted_message = message

        agent.on("receive", event_handler)
        message = Ack(receiver=agent)

        await async_drain(async_propogate(message))

        assert message == emitted_message
